import tkinter as tk
from tkinter import messagebox
import requests
from PIL import Image, ImageTk

API_KEY = "crucj0hr01qi6bkasek0crucj0hr01qi6bkasekg"  # Your Alpha Vantage API Key

def fetch_stock_data(ticker):
    base_url = "https://www.alphavantage.co/query"
    params = {
        "function": "TIME_SERIES_DAILY",
        "symbol": ticker,
        "apikey": API_KEY
    }

    try:
        response = requests.get(base_url, params=params)
        data = response.json()

        if "Time Series (Daily)" not in data:
            error_message = data.get('Note', 'Invalid API response. Check your symbol or API limits.')
            return f"Error: {error_message}"
        
        latest_data_key = list(data["Time Series (Daily)"].keys())[0]
        latest_data = data["Time Series (Daily)"][latest_data_key]

        latest_price = float(latest_data["4. close"])
        high_price = float(latest_data["2. high"])
        low_price = float(latest_data["3. low"])
        volume = int(latest_data["5. volume"])

        result = (
            f"Ticker: {ticker}\n"
            f"Latest Price: ₹{latest_price:.2f}\n"
            f"Day High: ₹{high_price:.2f}\n"
            f"Day Low: ₹{low_price:.2f}\n"
            f"Volume: {volume}"
        )
        return result
    except requests.exceptions.RequestException as e:
        return f"Network error: {str(e)}"
    except Exception as e:
        return f"Error fetching data: {str(e)}"

def on_fetch():
    ticker = entry.get().strip().upper()
    if ticker:
        # Automatically append ".BSE" if it's not already in the ticker
        if not ticker.endswith(".BSE"):
            ticker += ".BSE"
        
        data = fetch_stock_data(ticker)
        messagebox.showinfo("Stock Data", data)
    else:
        messagebox.showwarning("Input Error", "Please enter a ticker symbol.")

# Create the main window
root = tk.Tk()
root.title("Stock Price Fetcher")

# Load and set the background image
bg_photo = None
try:
    bg_image = Image.open(r"C:\Users\singh\Downloads\wallpaperflare.com_wallpaper.jpg")
    bg_image = bg_image.resize((800, 600))
    bg_photo = ImageTk.PhotoImage(bg_image)
except Exception as e:
    print(f"Error loading image: {str(e)}")
    root.configure(bg='lightblue')

canvas = tk.Canvas(root, width=800, height=600)
canvas.pack(fill="both", expand=True)

if bg_photo:
    canvas.create_image(0, 0, image=bg_photo, anchor="nw")

center_x = 400
label_y = 200
entry_y = label_y + 40
button_y = entry_y + 40

label = tk.Label(canvas, text="Enter Ticker Symbol (e.g., INFY):", bg='lightblue', font=('Arial', 14))
label.place(x=center_x - 150, y=label_y)

entry = tk.Entry(canvas, bg='white', font=('Arial', 14))
entry.place(x=center_x - 150, y=entry_y, width=300)

fetch_button = tk.Button(canvas, text="Fetch Stock Data", command=on_fetch, bg='lightgreen', font=('Arial', 14))
fetch_button.place(x=center_x - 150, y=button_y)

# Run the GUI loop
root.mainloop()
